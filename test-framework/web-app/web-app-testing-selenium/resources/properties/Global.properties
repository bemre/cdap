# Units and statuses
eventsPerSecond = EPS
opss = OPS/S
bytesPerSecond = BPS
statusStopped = STOPPED
statusRunning = RUNNING
statusStarting = STARTING
statusStopping = STOPPING
events = EVENTS
b = B

# Messages in empty div
noProcedures = No Procedures.
addProcedures = Add Procedures by uploading an Application JAR.
noStreams = No Streams.
addStreams = Please create one in code or on the commandline.
noFlows = No Flows.
addFlows = Add Flows by uploading an Application JAR.
noDatasets = No Datasets.
addDatasets = Please create one in code or on the commandline.

# names of jars
countRandom = CountRandom
crDescription = Example random count application
purchaseApp = PurchaseHistory
phDescription = Purchase history app
helloWorld = HelloWorld
hwDescription = A Hello World program for the Continuuity Reactor

#partial paths
appsPage = #/apps/
overviewPage = #/overview
collectPage = #/streams
metricsPage = #/analyze
processPage = #/flows
queryPage = #/procedures
storePage = #/datasets

# paths to jars
countRandomPath = resources/examples/CountRandom.jar
purchasePath = resources/examples/PurchaseApp.jar
helloWorldPath = resources/examples/HelloWorld.jar

# URLs
rootUrl = http://localhost:9999/
accountUrl = https://accounts.continuuity.com/login
supportUrl = http://support.continuuity.com/forums/194926-welcome-to-continuuity-support-
termsUrl = http://www.continuuity.com/terms
contactUrl = http://www.continuuity.com/contact-us
mapReduceUrl = #/mapreduce/PurchaseHistory:PurchaseHistoryWorkflow_PurchaseHistoryBuilder
countRandomDSUrl = #/flows/CountRandom:CountRandom
crDatasetUrl = #/datasets/randomTable
whoFlow = #/flows/HelloWorld:WhoFlow
greetingUrl = #/procedures/HelloWorld:Greeting
workFlowUrl = #/workflows/PurchaseHistory:PurchaseHistoryWorkflow

# H1 on different pages
collectH1 = Collect Data
overviewH1 = Overview
metricsH1 = Metrics Explorer
processH1 = Process Data
queryH1 = Query Data
storeH1 = Store Data
mapReduceH1 = PurchaseHistoryWorkflow_PurchaseHistoryBuilder Mapreduce
workFlowH1 = PurchaseHistoryWorkflow Workflow
sourceH1 = source
splitterH1 = splitter
counterH1 = counter
whoFlowH1 = WhoFlow Flow
whoFlowletH1 = who
greetingH1 = Greeting Procedure

# paths to drivers
driverType = Chrome
runSuite = false
chromeMac = resources/chromedriver/MAC_OS_32/chromedriver3
chromeLinux = resources/chromedriver/LINUX_64/chromedriver
phantomMac = resources/phantomjs/MAC/bin/phantomjs
phantomLinux = resources/phantomjs/LINUX_32/bin/phantomjs
phantomMac64 = resources/phantomjs/MAC/bin/phantomjs
phantomLinux64 = resources/phantomjs/LINUX_64/bin/phantomjs

# names of Datasets, flows, queries..
randomTable = randomTable
rtDesc = com.continuuity.api.data.dataset.KeyValueTable
history = history
hstDesc = com.continuuity.api.data.dataset.ObjectStore
purchases = purchases
prcDesc = com.continuuity.api.data.dataset.ObjectStore
purchaseFlow1 = PurchaseFlow
customers = frequentCustomers
purchaseFlow2 = PurchaseHistoryWorkflow_PurchaseHistoryBuilder
purchaseFlow3 = PurchaseHistoryWorkflow
purchaseQuery = PurchaseQuery
purchaseStream = purchaseStream
who = who
hwFlow = WhoFlow
whom = whom
greeting = Greeting


# main panels and words
process = Process
collect = Collect
store = Store
query = Query
stream = Stream
processed = PROCESSED
processingRate = PROCESSING RATE
busyness = BUSYNESS
operations = DATA OPERATIONS
storage = STORAGE
stored = STORED
errors = ERRORS
source = SOURCE
splitter = SPLITTER
counter = COUNTER
outbound = OUTBOUND EVENTS PER SECOND
inbound = INBOUND EVENTS PER SECOND
map = MAP
reduce = REDUCE
zeroIn = 0 IN
zeroOut = 0 OUT
mapping = MAPPING
reducing = REDUCING
who = WHO
saver = SAVER
requests = SUCCESSFUL REQUESTS
failed = FAILED REQUESTS
queryRunBtn = CLICK "START" ABOVE
queryRunBtnExecute = EXECUTE
schedule = NEXT SCHEDULED RUN
builder = PURCHASEHISTORYBUILDER

# flowlets
writeRate = WRITE RATE (BYTES)
readRate = READ RATE (OPS)
inputs = Inputs
outputs Outputs
noInputs = There are no inputs on this flowlet.
noOutputs = There are no outputs on this flowlet.
processedFlowlets = Processed
textToInject = Hello World
method = greet
parameters = {}
response = "Hello Hello World!"

#checking metrics with purchase app
apps = APPS
datasets = DATASETS
flows = FLOWS
mapreduses = MAPREDUCES
procedures = PROCEDURES
streams = STREAMS
chosen = PURCHASEHISTORY
metricChosen = EVENTS COLLECTED
